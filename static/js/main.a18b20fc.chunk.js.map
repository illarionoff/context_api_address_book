{"version":3,"sources":["context.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/about.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentWillMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","className","htmlFor","classnames","is-invalid","defaultProps","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this2","_this$state2","bind","layouts_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","Link","to","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this$props$contact","onClick","style","cursor","float","color","marginRight","Contacts","Fragment","contacts_Contact","About","Test","title","body","fetch","then","response","json","NotFound","App","context_Provider","HashRouter","layouts_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a18b20fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        // adding new contact to state using spread operator\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      // {  //Delete default data\n      //   id: 1,\n      //   name: \"Alex\",\n      //   email: \"alex@gmail.com\",\n      //   phone: \"111-111-111\"\n      // },\n      // {\n      //   id: 2,\n      //   name: \"Ira\",\n      //   email: \"ira@gmail.com\",\n      //   phone: \"222-222-222\"\n      // },\n      // {\n      //   id: 3,\n      //   name: \"Barnie\",\n      //   email: \"meow@gmail.com\",\n      //   phone: \"333-333-333\"\n      // }\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  // Fetch API\n  // componentDidMount() {\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(response => response.json())\n  //     .then(data =>\n  //       this.setState({\n  //         contacts: data\n  //       })\n  //     );\n  // }\n\n  // componentDidMount() {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(res => this.setState({ contacts: res.data }));\n  // }\n\n  // Async method\n  async componentWillMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer; // Can export only Context\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  // use [e.target.name] to specify state target\n\n  // onSubmit = (dispatch, e) => {\n\n  // Making it Async\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    // Check for error\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is requird\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    // axios\n    //   .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\n    //   .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    //Adding async method\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // move dispatch inside promise\n    // dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n\n    // Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      // Wrap eveything in Cosumer to add to Context\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Contact</div>\n              <div className=\"card-body\">\n                {/* binding submit to dispatch */}\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  {/* <div className=\"form-group\"> Moved to TextInputGroup\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Add name\"\n                      name=\"name\"\n                      value={name}\n                      onChange={this.onChange}\n                    />\n                  </div> */}\n                  {/* <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Add email\"\n                      name=\"email\"\n                      value={email}\n                      onChange={this.onChange}\n                    />\n                  </div> */}\n                  {/* <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Add phone\"\n                      name=\"phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                    />\n                  </div> */}\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block btn-dark\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n\n      //   return (\n      //     <div className=\"card mb-3\">\n      //     <div className=\"card-header\">Contact</div>\n      //     <div className=\"card-body\">\n      //       <form onSubmit={this.onSubmit}>\n      //         <div className=\"form-group\">\n      //           <label htmlFor=\"name\">Name</label>\n      //           <input\n      //             type=\"text\"\n      //             className=\"form-control form-control-lg\"\n      //             placeholder=\"Add name\"\n      //             name=\"name\"\n      //             value={name}\n      //             onChange={this.onChange}\n      //           />\n      //         </div>\n      //         <div className=\"form-group\">\n      //           <label htmlFor=\"email\">Email</label>\n      //           <input\n      //             type=\"email\"\n      //             className=\"form-control form-control-lg\"\n      //             placeholder=\"Add email\"\n      //             name=\"email\"\n      //             value={email}\n      //             onChange={this.onChange}\n      //           />\n      //         </div>\n      //         <div className=\"form-group\">\n      //           <label htmlFor=\"phone\">Phone</label>\n      //           <input\n      //             type=\"text\"\n      //             className=\"form-control form-control-lg\"\n      //             placeholder=\"Add phone\"\n      //             name=\"phone\"\n      //             value={phone}\n      //             onChange={this.onChange}\n      //           />\n      //         </div>\n      //         <input\n      //           type=\"submit\"\n      //           value=\"Add Contact\"\n      //           className=\"btn btn-block btn-dark\"\n      //         />\n      //       </form>\n      //     </div>\n      //   </div>\n      //   )\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\n\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is requird\" } });\n      return;\n    }\n\n    const updContact = {\n      name, //same as name:name\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-block btn-dark\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import \"./CSS/contact.css\";  importing separate CSS file\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              {/* <a href=\"/\" className=\"nav-link\">\n                Home\n              </a> */}\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\">Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              {/* <a href=\"/\" className=\"nav-link\">\n                Home\n              </a> */}\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\">About</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              {/* <a href=\"/\" className=\"nav-link\">\n                Home\n              </a> */}\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\">Add</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\n// CSS Styling React\n// const headingStyle = {\n//   color: \"red\",\n//   fontSize: \"50px\"\n// };\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  // constructor() {\n  //   super();\n  //   this.state = {};\n  //   this.onShowClick = this.onShowClick.bind(this);\n  // }\n\n  onShowClick = e => {\n    // console.log(this.state);\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n\n  // onDeleteClick = (id, dispatch) => {\n  //   // this.props.deleteClickHandler(); //Adding to props => deleting as delete will happen in actions.js\n  //   axios\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n  //     .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n  //   // dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  //   // move dispatch inside propmise\n  // };\n\n  // Async method\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      // Add try-dispatch to eneble delete from State, as ectual DB doesn't exist\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  // Using function\n  // renderElement() {\n  //   if (this.state.showContactInfo)\n  //     return (\n  //       <ul className=\"list-group\">\n  //         <li className=\"list-group-item\">Email: {this.props.contact.email}</li>\n  //         <li className=\"list-group-item\">Phone: {this.props.contact.phone}</li>\n  //       </ul>\n  //     );\n  //   return null;\n  // }\n\n  render() {\n    const { name, email, phone, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      // Wrapping everything in Consumer\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                {/* <i onClick={this.onShowClick.bind(this)} className=\"fas fa-sort-down\" /> */}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  // onClick={this.onDeleteClick} //Deleting as delete will happen in actions.js\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                />\n\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n              {/* When using function */}\n              {/* {this.renderElement()} */}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n  // deleteClickHandler: PropTypes.func.isRequired\n  // name: PropTypes.string.isRequired,\n  // email: PropTypes.string.isRequired,\n  // phone: PropTypes.string.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\n// import AddContact from \"./AddContact\";\n\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  //   constructor() {\n  //     super();\n  //     this.state = {\n  //       contacts: [\n  //         {\n  //           id: 1,\n  //           name: \"Alex\",\n  //           email: \"alex@gmail.com\",\n  //           phone: \"111-111-111\"\n  //         },\n  //         {\n  //           id: 2,\n  //           name: \"Ira\",\n  //           email: \"ira@gmail.com\",\n  //           phone: \"222-222-222\"\n  //         },\n  //         {\n  //           id: 3,\n  //           name: \"Barnie\",\n  //           email: \"meow@gmail.com\",\n  //           phone: \"333-333-333\"\n  //         }\n  //       ]\n  //     };\n  //   }\n\n  // move to context.js in src folder.\n  // state = {\n  //   contacts: [\n  //     {\n  //       id: 1,\n  //       name: \"Alex\",\n  //       email: \"alex@gmail.com\",\n  //       phone: \"111-111-111\"\n  //     },\n  //     {\n  //       id: 2,\n  //       name: \"Ira\",\n  //       email: \"ira@gmail.com\",\n  //       phone: \"222-222-222\"\n  //     },\n  //     {\n  //       id: 3,\n  //       name: \"Barnie\",\n  //       email: \"meow@gmail.com\",\n  //       phone: \"333-333-333\"\n  //     }\n  //   ]\n  // };\n\n  // Removing item from child element => Removing as deleting will happen in actions.js\n  // deleteContact = id => {\n  //   // console.log(id);\n  //   const { contacts } = this.state;\n  //   const newContacts = contacts.filter(contact => contact.id !== id); //Filter and add contacts where contact.ID is not equal to passed ID\n  //   this.setState({\n  //     contacts: newContacts\n  //   });\n  // };\n\n  render() {\n    // Need to return consumer and wrap everything inside\n    return (\n      <Consumer>\n        {value => {\n          //Value defined in context.js(this case is this.state)\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> list\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  // name={contact.name}\n                  // email={contact.email}\n                  // phone={contact.phone}\n                  contact={contact}\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)} // Getting props from Contact.js and binding to ID of the object => remove as deleting will happen in actions.js\n                />\n              ))}\n              {/* Possible to nest fragment inside other fragment */}\n              {/* <AddContact />  */}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-5\">About contact manager</h1>\n      <p className=\"lead\">Akk to manage contact</p>\n      <p className=\"secondary\">Versio 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, this page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"; //Chnaged BrowserRouter to HashRouter\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layouts/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport About from \"./components/pages/about\";\nimport Test from \"./components/test/Test\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //npm install bootstrap\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      // Wrap everything in provider\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}